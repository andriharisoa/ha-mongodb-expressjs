version: "3.8"

services:
  mongo1:
    image: mongo:6.0
    container_name: mongo1
    hostname: mongo1
    restart: always
    volumes:
      - mongo1-data:/data/db
    networks:
      - mongo-net
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]

  mongo2:
    image: mongo:6.0
    container_name: mongo2
    hostname: mongo2
    restart: always
    volumes:
      - mongo2-data:/data/db
    networks:
      - mongo-net
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]

  mongo3:
    image: mongo:6.0
    container_name: mongo3
    hostname: mongo3
    restart: always
    volumes:
      - mongo3-data:/data/db
    networks:
      - mongo-net
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]

  mongo-init-replica:
    image: mongo:6.0
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    networks:
      - mongo-net
    restart: "on-failure"
    entrypoint: >
      bash -c "
        sleep 10 &&
        mongosh --host mongo1:27017 --eval '
          rs.initiate({
            _id: \"rs0\",
            members: [
              { _id: 0, host: \"mongo1:27017\" },
              { _id: 1, host: \"mongo2:27017\" },
              { _id: 2, host: \"mongo3:27017\" }
            ]
          })
        ' || true
      "

  app:
    build: ./app
    container_name: nodeapp
    restart: always
    ports:
      - "3000:3000"
    environment:
      - MONGO_URI=mongodb://mongo1:27017,mongo2:27017,mongo3:27017/mydb?replicaSet=rs0
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    networks:
      - mongo-net

volumes:
  mongo1-data:
  mongo2-data:
  mongo3-data:

networks:
  mongo-net:
    driver: bridge

